// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieRatingsBackendWebApi.Models;

#nullable disable

namespace MovieRatingsBackendWebApi.Migrations
{
    [DbContext(typeof(DbMovieContext))]
    [Migration("20240710171719_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieRatingsBackendWebApi.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Crime"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Short"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 14,
                            Name = "War"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Animation"
                        });
                });

            modelBuilder.Entity("MovieRatingsBackendWebApi.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImdbId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewComments")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ReviewHeading")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImdbId = "tt3581920",
                            Rating = 5,
                            ReviewComments = "Movie1 review",
                            ReviewHeading = "Heading: The Last of Us2"
                        },
                        new
                        {
                            Id = 2,
                            ImdbId = "tt1188729",
                            Rating = 10,
                            ReviewComments = "Movie2 review",
                            ReviewHeading = "Heading: Pandorum"
                        },
                        new
                        {
                            Id = 3,
                            ImdbId = "tt0348150",
                            Rating = 1,
                            ReviewComments = "Movie3 review",
                            ReviewHeading = "Heading: Superman Returns"
                        },
                        new
                        {
                            Id = 4,
                            ImdbId = "tt6565702",
                            Rating = 8,
                            ReviewComments = "Movie4 review",
                            ReviewHeading = "Heading: Dark Phoenix"
                        },
                        new
                        {
                            Id = 5,
                            ImdbId = "tt0100813",
                            Rating = 3,
                            ReviewComments = "Movie5 review",
                            ReviewHeading = "Heading: Treasure Island"
                        });
                });

            modelBuilder.Entity("MovieRatingsBackendWebApi.Models.MovieGenre", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            MovieId = 1,
                            GenreId = 2
                        },
                        new
                        {
                            MovieId = 1,
                            GenreId = 6
                        },
                        new
                        {
                            MovieId = 2,
                            GenreId = 3
                        },
                        new
                        {
                            MovieId = 2,
                            GenreId = 4
                        },
                        new
                        {
                            MovieId = 2,
                            GenreId = 7
                        },
                        new
                        {
                            MovieId = 3,
                            GenreId = 5
                        },
                        new
                        {
                            MovieId = 3,
                            GenreId = 8
                        },
                        new
                        {
                            MovieId = 4,
                            GenreId = 9
                        },
                        new
                        {
                            MovieId = 5,
                            GenreId = 1
                        });
                });

            modelBuilder.Entity("MovieRatingsBackendWebApi.Models.MovieGenre", b =>
                {
                    b.HasOne("MovieRatingsBackendWebApi.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieRatingsBackendWebApi.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieRatingsBackendWebApi.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("MovieRatingsBackendWebApi.Models.Movie", b =>
                {
                    b.Navigation("MovieGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
